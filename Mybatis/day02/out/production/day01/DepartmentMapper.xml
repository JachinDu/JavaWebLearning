<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mybatis.dao.DepartmentMapper">
<!--        public Department getDeptById(Integer id);-->
    <select id="getDeptById" resultType="mybatis.bean.Department">
        select id,dept_name deptName from tb_dept where id=#{id}
    </select>

    
    <resultMap id="MyDept" type="mybatis.bean.Department">
        <id column="did" property="id"/>
        <result column="dept_name" property="deptName"/>
<!--        员工信息，需要定义集合collection
                property: 对应的集合属性
                ofType: 指定集合中元素的类型-->
        <collection property="employees" ofType="mybatis.bean.Employee">
<!--            定义集合中元素的封装规则-->
            <id column="eid" property="id"/>
            <result column="last_name" property="lastName"/>
            <result column="email" property="email"/>
            <result column="gender" property="gender"/>
        </collection>
    </resultMap>
<!--        public Department getDeptByIdPlus(Integer id);-->
    <select id="getDeptByIdPlus" resultMap="MyDept">
      select d.id did,d.dept_name dept_name,
                e.id eid,e.last_name last_name,e.email email,e.gender gender
      from tb_dept d
      left join tb_employee e on d.id = e.d_id
      where d.id=#{id};
    </select>

    
    <resultMap id="MyDeptStep" type="mybatis.bean.Department">
        <id column="id" property="id"/>
        <result column="dept_name" property="deptName"/>
<!--        select：执行的对应sql实现
            column：查询要传入的参数，在resultMap中找-->
        <collection property="employees"
                    select="mybatis.dao.EmployeeMapperPlus.getEmpsByDeptId"
                    column="id">

        </collection>
    </resultMap>
    
<!--        public Department getDeptByIdStep(Integer id);-->
    <select id="getDeptByIdStep" resultMap="MyDeptStep">
        select id,dept_name deptName from tb_dept where id=#{id}
    </select>

</mapper>